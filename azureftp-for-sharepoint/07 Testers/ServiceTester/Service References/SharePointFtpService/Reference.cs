//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTester.SharePointFtpService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/AzureFtpForSharePoint.Server.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceTester.SharePointFtpService.CloseResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceTester.SharePointFtpService.OpenResponse))]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CloseResponse", Namespace="http://schemas.datacontract.org/2004/07/AzureFtpForSharePoint.Server.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CloseResponse : ServiceTester.SharePointFtpService.ServiceResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenResponse", Namespace="http://schemas.datacontract.org/2004/07/AzureFtpForSharePoint.Server.DataContract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class OpenResponse : ServiceTester.SharePointFtpService.ServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.4guysfrompalmira.net/contracts/2013/04/04", ConfigurationName="SharePointFtpService.ISharePointFtpService")]
    public interface ISharePointFtpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/Open", ReplyAction="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/OpenRe" +
            "sponse")]
        ServiceTester.SharePointFtpService.OpenResponse Open(string url, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/Close", ReplyAction="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/CloseR" +
            "esponse")]
        ServiceTester.SharePointFtpService.CloseResponse Close(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/List", ReplyAction="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/ListRe" +
            "sponse")]
        string[] List(string currentFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/Change" +
            "Directory", ReplyAction="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/Change" +
            "DirectoryResponse")]
        bool ChangeDirectory(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/Get", ReplyAction="http://www.4guysfrompalmira.net/contracts/2013/04/04/ISharePointFtpService/GetRes" +
            "ponse")]
        byte[] Get(string file);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISharePointFtpServiceChannel : ServiceTester.SharePointFtpService.ISharePointFtpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SharePointFtpServiceClient : System.ServiceModel.ClientBase<ServiceTester.SharePointFtpService.ISharePointFtpService>, ServiceTester.SharePointFtpService.ISharePointFtpService {
        
        public SharePointFtpServiceClient() {
        }
        
        public SharePointFtpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SharePointFtpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SharePointFtpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SharePointFtpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceTester.SharePointFtpService.OpenResponse Open(string url, string username, string password) {
            return base.Channel.Open(url, username, password);
        }
        
        public ServiceTester.SharePointFtpService.CloseResponse Close(string sessionId) {
            return base.Channel.Close(sessionId);
        }
        
        public string[] List(string currentFolder) {
            return base.Channel.List(currentFolder);
        }
        
        public bool ChangeDirectory(string path) {
            return base.Channel.ChangeDirectory(path);
        }
        
        public byte[] Get(string file) {
            return base.Channel.Get(file);
        }
    }
}
